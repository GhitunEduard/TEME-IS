
MODEL--->User


package com.example.ProiectFinalISLegat.model;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import javax.persistence.*;

@Entity
@Table
@NoArgsConstructor
@AllArgsConstructor
public class User {
    @Id
    @SequenceGenerator(
            name = "user_sequence",
            sequenceName = "user_sequence",
            allocationSize = 1
    )
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = "user_sequence"
    )
    private long id;
    private String username;
    private String password;
    private String name;
    private String email;
    @Column(columnDefinition = "BOOLEAN DEFAULT FALSE")
    private Boolean isAdmin;
    // New field for admin status

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    public User(String username, String password, String name, String email, boolean isAdmin) {
        this.username = username;
        this.password = password;
        this.name = name;
        this.email = email;
        this.isAdmin = isAdmin;
    }

    // Getters and setters for the new field
    public Boolean isAdmin() {
        return isAdmin;
    }

    public void setAdmin(Boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

    // Existing methods remain unchanged...

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", username='" + username + '\'' +
                ", password='" + password + '\'' +
                ", name='" + name + '\'' +
                ", email='" + email + '\'' +
                ", isAdmin=" + isAdmin +
                '}';
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof User)) {
            return false;
        }
        if (obj == this) {
            return true;
        }
        User otherUser = (User) obj;
        return otherUser.getUsername().equals(this.getUsername()) &&
                otherUser.getPassword().equals(this.getPassword()) &&
                otherUser.isAdmin() == this.isAdmin();
    }

    private Object getPassword() {
        return null;
    }

    public String getUsername() {
        return null;
    }

    public String getEmail() {
        return null;
    }
}
